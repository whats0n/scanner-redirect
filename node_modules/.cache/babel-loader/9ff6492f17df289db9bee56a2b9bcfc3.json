{"remainingRequest":"/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/thread-loader/dist/cjs.js!/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/babel-loader/lib/index.js!/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/whats0n/Documents/home-projects/scanner-redirect/src/components/Stream.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/whats0n/Documents/home-projects/scanner-redirect/src/components/Stream.vue","mtime":1542838260534},{"path":"/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/whats0n/Documents/home-projects/scanner-redirect/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { QrcodeStream } from 'vue-qrcode-reader';\nexport default {\n  name: 'Stream',\n  components: {\n    QrcodeStream: QrcodeStream\n  },\n  data: function data() {\n    return {\n      isValid: false,\n      validating: false,\n      camera: {},\n      result: null,\n      loading: false,\n      firstLoad: true\n    };\n  },\n  computed: {\n    cameraForzen: function cameraForzen() {\n      return this.camera === false || this.loading && !this.firstLoad;\n    }\n  },\n  methods: {\n    handleInit: function () {\n      var _handleInit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(promise) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loading = true;\n                _context.prev = 1;\n                _context.next = 4;\n                return promise;\n\n              case 4:\n                _context.next = 10;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n                this.$emit('support', false);\n\n              case 10:\n                _context.prev = 10;\n                this.firstLoad = false;\n                this.loading = false;\n                return _context.finish(10);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 6, 10, 14]]);\n      }));\n\n      return function handleInit(_x) {\n        return _handleInit.apply(this, arguments);\n      };\n    }(),\n    handleDecode: function () {\n      var _handleDecode = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(content) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.result = content;\n                this.stopCamera();\n                this.validating = true;\n                _context2.next = 5;\n                return this.validate(content);\n\n              case 5:\n                this.isValid = _context2.sent;\n                this.validating = false;\n\n                if (this.isValid) {\n                  this.$emit('success', this.result);\n                  this.startCamera();\n                } else {\n                  setTimeout(function () {\n                    _this.startCamera();\n                  }, 2000);\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function handleDecode(_x2) {\n        return _handleDecode.apply(this, arguments);\n      };\n    }(),\n    stopCamera: function stopCamera() {\n      this.camera = false;\n    },\n    startCamera: function startCamera() {\n      this.camera = null;\n    },\n    validate: function validate(content) {\n      return new Promise(function (resolve) {\n        return resolve(new RegExp('^(http|https)://').test(content));\n      });\n    }\n  }\n};",{"version":3,"sources":["Stream.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,YAAA,QAAA,mBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,IAJA;AAMA,MAAA,OAAA,EAAA,KANA;AAOA,MAAA,SAAA,EAAA;AAPA,KAAA;AAAA,GALA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,MAAA,KAAA,KAAA,IAAA,KAAA,OAAA,IAAA,CAAA,KAAA,SAAA;AACA;AAHA,GAdA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA;AAAA;AAAA;AAAA,+CACA,OADA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,OAAA,GAAA,IAAA;AAFA;AAAA;AAAA,uBAKA,OALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOA,gBAAA,OAAA,CAAA,KAAA;AACA,qBAAA,KAAA,CAAA,SAAA,EAAA,KAAA;;AARA;AAAA;AAUA,qBAAA,SAAA,GAAA,KAAA;AACA,qBAAA,OAAA,GAAA,KAAA;AAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAeA,IAAA,YAfA;AAAA;AAAA;AAAA,gDAeA,OAfA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBA,qBAAA,MAAA,GAAA,OAAA;AAEA,qBAAA,UAAA;AAEA,qBAAA,UAAA,GAAA,IAAA;AApBA;AAAA,uBAqBA,KAAA,QAAA,CAAA,OAAA,CArBA;;AAAA;AAqBA,qBAAA,OArBA;AAsBA,qBAAA,UAAA,GAAA,KAAA;;AAEA,oBAAA,KAAA,OAAA,EAAA;AACA,uBAAA,KAAA,CAAA,SAAA,EAAA,KAAA,MAAA;AACA,uBAAA,WAAA;AACA,iBAHA,MAGA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,KAAA,CAAA,WAAA;AACA,mBAFA,EAEA,IAFA,CAAA;AAGA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkCA,IAAA,UAlCA,wBAkCA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,KApCA;AAsCA,IAAA,WAtCA,yBAsCA;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KAxCA;AA0CA,IAAA,QA1CA,oBA0CA,OA1CA,EA0CA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,IAAA,MAAA,CAAA,kBAAA,EAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AAAA,OAAA,CAAA;AACA;AA5CA;AAnBA,CAAA","sourcesContent":["<template>\n  <QrcodeStream\n    :camera=\"camera\"\n    @decode=\"handleDecode\"\n    @init=\"handleInit\"\n  >\n    <div\n      v-show=\"cameraForzen\"\n      class=\"validation-layer\"\n    >\n      <div\n        v-if=\"validating\"\n        class=\"validation-notice\"\n      >\n        Long validation in progress...\n      </div>\n\n      <div\n        v-else\n        class=\"validation-result\"\n      >\n        <div\n          v-if=\"!isValid\"\n          class=\"is-invalid\"\n        >\n          This is NOT a URL\n        </div>\n      </div>\n    </div>\n  </QrcodeStream>\n</template>\n\n<script>\nimport { QrcodeStream } from 'vue-qrcode-reader'\nexport default {\n  name: 'Stream',\n  components: {\n    QrcodeStream\n  },\n  data: () => ({\n    isValid: false,\n    validating: false,\n    camera: {},\n    result: null,\n\n    loading: false,\n    firstLoad: true\n  }),\n  computed: {\n    cameraForzen () {\n      return this.camera === false || (this.loading && !this.firstLoad)\n    }\n  },\n  methods: {\n    async handleInit (promise) {\n      this.loading = true\n\n      try {\n        await promise\n      } catch (error) {\n        console.error(error)\n        this.$emit('support', false)\n      } finally {\n        this.firstLoad = false\n        this.loading = false\n      }\n    },\n\n    async handleDecode (content) {\n      this.result = content\n\n      this.stopCamera()\n\n      this.validating = true\n      this.isValid = await this.validate(content)\n      this.validating = false\n\n      if (this.isValid) {\n        this.$emit('success', this.result)\n        this.startCamera()\n      } else {\n        setTimeout(() => {\n          this.startCamera()\n        }, 2000)\n      }\n    },\n\n    stopCamera () {\n      this.camera = false\n    },\n\n    startCamera () {\n      this.camera = null\n    },\n\n    validate (content) {\n      return new Promise(resolve => resolve(new RegExp('^(http|https)://').test(content)))\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.qrcode-stream {\n  width: 100vw;\n  height: 100vh;\n\n  &__inner-wrapper,\n  &__camera,\n  &__pause-frame {\n    width: 100%;\n    height: 100%;\n  }\n  &__camera,\n  &__pause-frame {\n    object-fit: cover;\n  }\n}\n\n.validation-layer {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(255, 255, 255, .8);\n  text-align: center;\n  padding: 10px;\n\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n}\n\n.validation-notice,\n.validation-result {\n  font-size: 24px;\n  font-weight: 700;\n}\n\n.is-valid {\n  color: green;\n}\n.is-invalid {\n  color: red;\n}\n</style>\n"],"sourceRoot":"src/components"}]}