{"remainingRequest":"/Users/whats0n/Documents/home-projects/scanner/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/whats0n/Documents/home-projects/scanner/src/AppNew.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/whats0n/Documents/home-projects/scanner/src/AppNew.vue","mtime":1542748025147},{"path":"/Users/whats0n/Documents/home-projects/scanner/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/whats0n/Documents/home-projects/scanner/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/whats0n/Documents/home-projects/scanner/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/whats0n/Documents/home-projects/scanner/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/whats0n/Documents/home-projects/scanner/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.qrcode-stream__camera, .qrcode-stream__pause-frame {\n  width: 300px;\n  height: 300px;\n}\n.validation-layer {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(255, 255, 255, .8);\n  text-align: center;\n  padding: 10px;\n\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n}\n\n.validation-notice,\n.validation-result {\n  font-weight: bold;\n  font-size: 1.4rem;\n}\n\n.valid {\n  color: green;\n}\n.invalid {\n  color: red;\n}\n",{"version":3,"sources":["AppNew.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"AppNew.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div>\n    <p class=\"decode-result\">Last result: <b>{{ result }}</b></p>\n\n    <qrcode-stream :camera=\"camera\" @decode=\"onDecode\" @init=\"onInit\">\n      <div v-show=\"cameraForzen\" class=\"validation-layer\">\n        <div class=\"validation-notice\" v-if=\"validating\">\n          Long validation in progress...\n        </div>\n\n        <div class=\"validation-result\" v-if=\"!validating\">\n          <div v-if=\"isValid\" class=\"valid\">\n            This is a URL\n          </div>\n\n          <div v-else class=\"invalid\">\n            This is NOT a URL!\n          </div>\n        </div>\n      </div>\n    </qrcode-stream>\n  </div>\n</template>\n\n<script>\nimport { QrcodeStream } from 'vue-qrcode-reader'\nexport default {\n  components: {\n    QrcodeStream\n  },\n  data () {\n    return {\n      QrcodeStream,\n\n      isValid: false,\n      validating: false,\n      camera: {},\n      result: null,\n\n      loading: false,\n      firstLoad: true\n    }\n  },\n\n  computed: {\n    cameraForzen () {\n      return this.camera === false || (this.loading && !this.firstLoad)\n    }\n  },\n\n  methods: {\n\n    async onDecode (content) {\n      this.result = content\n\n      this.stopCamera()\n\n      this.validating = true\n      this.isValid = await this.validate(content)\n      this.validating = false\n\n      window.setTimeout(() => {\n        this.startCamera()\n      }, 2000)\n    },\n\n    stopCamera () {\n      this.camera = false\n    },\n\n    startCamera () {\n      // use default settings\n      this.camera = null\n    },\n\n    validate (content) {\n      return new Promise(resolve => {\n        window.setTimeout(() => { // pretend it's taking really long\n          if (content.startsWith('http')) {\n            resolve(true)\n          } else {\n            resolve(false)\n          }\n        }, 3000)\n      })\n    },\n\n    async onInit (promise) {\n      this.loading = true\n\n      try {\n        await promise\n      } catch (error) {\n        console.error(error)\n      } finally {\n        this.firstLoad = false\n        this.loading = false\n      }\n    }\n\n  }\n}\n</script>\n\n<style>\n.qrcode-stream__camera, .qrcode-stream__pause-frame {\n  width: 300px;\n  height: 300px;\n}\n.validation-layer {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(255, 255, 255, .8);\n  text-align: center;\n  padding: 10px;\n\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n}\n\n.validation-notice,\n.validation-result {\n  font-weight: bold;\n  font-size: 1.4rem;\n}\n\n.valid {\n  color: green;\n}\n.invalid {\n  color: red;\n}\n</style>"]}]}